name: Push Release Notes to Beamer

on:
  workflow_dispatch

jobs:
  push-release-notes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get Latest Release ID and Tag Name
        id: latest_release
        run: |
          release_id=$(curl -sH "Authorization: Bearer ${{ github.token }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest" \
            | jq -r '.id')
          tag_name=$(curl -sH "Authorization: Bearer ${{ github.token }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest" \
            | jq -r '.tag_name')
          echo "::set-output name=id::$release_id"
          echo "::set-output name=tag::$tag_name"
      - name: Get Release Notes
        id: release_notes
        run: |
          release_body=$(curl -sH "Authorization: Bearer ${{ github.token }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.latest_release.outputs.id }}" \
            | jq -r '.body')
          echo "::set-output name=notes::$release_body"
      - name: Store Release Notes and Tag Name
        run: |
          echo "RELEASE_NOTES=${{ steps.release_notes.outputs.notes }}" >> $GITHUB_ENV
          echo "TAG_NAME=${{ steps.latest_release.outputs.tag }}" >> $GITHUB_ENV
      - name: Print result
        run: |
          echo "Latest Release ID: ${{ steps.latest_release.outputs.id }}"
          echo "Tag Name: ${{ env.TAG_NAME }}"
          echo "Release Notes:"
          echo "${{ env.RELEASE_NOTES }}"
