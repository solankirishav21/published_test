name: Discord Release Notification
on:
  workflow_dispatch:

jobs:
  notify_discord:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get Latest Release
        id: get_latest_release
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install requests
          python3 - <<EOF
          import os
          import requests
          
          github_token = os.getenv('GITHUB_TOKEN')
          repo_owner = 'solankirishav21'
          repo_name = 'published_test'
          headers = {'Authorization': f'Bearer {github_token}'}
          url = f'https://api.github.com/repos/{repo_owner}/{repo_name}/releases/latest'
          response = requests.get(url, headers=headers)
          data = response.json()
          tag = data.get('tag_name')
          print(f"::set-output name=tag::{tag}")
          EOF
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send release message to Discord
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          job: Discord Release Notification
          title: "Release ${{ steps.get_latest_release.outputs.tag }}"
          nofail: true
          nocontext: false
          noprefix: true
          nodetail: false
          notimestamp: false
          url: "https://github.com/solankirishav21/published_test/releases"
